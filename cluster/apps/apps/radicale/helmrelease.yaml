---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radicale
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/bjw-s/radicale
              tag: 3.1.8
            env:
              RADICALE_CONFIG: /config/config
    service:
      main:
        ports:
          http:
            port: 5232
    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://radicale.${S_HOMEPROD_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host radicale.${S_HOMEPROD_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx
    configMaps:
      config:
        enabled: true
        data:
          config.cfg: |            
            [server]
            hosts = 0.0.0.0:5232

            [auth]
            type = custom_http_remote_user
            remote_user_header = HTTP_X_AUTHENTIK_USERNAME
            
            [logging]
            level = info
            mask_passwords = True

            [storage]
            filesystem_folder = /data/collections
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        size: 1Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /data
      config:
        enabled: true
        type: configMap
        name: radicale-config
        globalMounts:
          - path: /config/config
            subPath: config.cfg
            readOnly: true
