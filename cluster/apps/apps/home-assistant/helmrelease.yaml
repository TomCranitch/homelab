# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  driftDetection:
    mode: enabled
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: ${CONTAINER_UID}
        runAsGroup: ${CONTAINER_GID}
        fsGroup: ${CONTAINER_FSGROUP}
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
    controllers:
      "home-assistant":
        defaultContainerOptions:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        pod:
          annotations:
            # TODO: switch to IOTLan (to hopefully help with mdns)
            # Using IOTLan was causing connectivity issues with google home hub/esphome
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name": "multus-serverlan",
                "namespace": "networking"
              }]
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.3.3
            envFrom:
              - secretRef:
                  name: home-assistant
            env:
              TZ: ${TZ}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
          code:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.104.1
            env:
              TZ: ${TZ}
              GIT_AUTHOR_NAME: Tom Cranitch
            workingDir: /config
            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --config
              - "/config/.vscode/config.yaml"
              - --port
              - "8081"
              - "/config"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      app:
        controller: "home-assistant"
        ports:
          http:
            port: 8123
      code:
        controller: "home-assistant"
        ports:
          http:
            port: 8081
    ingress:
      main:
        enabled: true
        # annotations:
        #   nginx.ingress.kubernetes.io/auth-url: |-
        #     http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        #   nginx.ingress.kubernetes.io/auth-signin: |-
        #     https://home.${S_HOMEPROD_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
        #   nginx.ingress.kubernetes.io/auth-response-headers: |-
        #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        #   nginx.ingress.kubernetes.io/auth-snippet: |
        #     proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host home.${S_HOMEPROD_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx
      code:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://hass-code.${S_HOMEPROD_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        className: nginx
        hosts:
          # TODO protect with reverse proxy auth
          - host: &hass-code hass-code.${S_HOMEPROD_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: code
                  port: http
        tls:
          - hosts:
              - *hass-code
      # auth-outpost:
      #   enabled: true
      #   ingressClassName: nginx
      #   host:
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant
        globalMounts:
          - path: /config
