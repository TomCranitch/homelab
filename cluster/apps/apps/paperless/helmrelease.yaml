---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless-ngx
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  driftDetection:
    mode: enabled
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.12.1
            envFrom:
              - secretRef:
                  name: paperless
            env:
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: 'true'
              PAPERLESS_CONSUMPTION_DIR: /library/consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: 'true'
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
              PAPERLESS_ADMIN_USER: tom
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_PORT: 8080
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_TIME_ZONE: ${TZ}
              PAPERLESS_URL: https://documents.${S_HOMEPROD_DOMAIN}
              USERMAP_UID: ${CONTAINER_UID}
              USERMAP_GID: ${CONTAINER_GID}
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBPORT: 
                valueFrom:
                  secretKeyRef:
                    name: default-cluster-pguser-paperless
                    key: port
              PAPERLESS_DBHOST: 
                valueFrom:
                  secretKeyRef:
                    name: default-cluster-pguser-paperless
                    key: host
              PAPERLESS_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: default-cluster-pguser-paperless
                    key: dbname
              PAPERLESS_DBUSER:
                valueFrom:
                  secretKeyRef:
                    name: default-cluster-pguser-paperless
                    key: user
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: default-cluster-pguser-paperless
                    key: password
          gotenburg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 8.12.0
            env:
              DISABLE_GOOGLE_CHROME: 1
          redis:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.4.1
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://documents.${S_HOMEPROD_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host documents.${S_HOMEPROD_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx
    persistence:
      data:
        enabled: true
        existingClaim: paperless-nfs
        globalMounts:
          - path: /library
    sidecars:
      gotenburg:
        image: thecodingmachine/gotenberg:8.12.0
        imagePullPolicy: IfNotPresent
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: '1'
      redis:
        image: public.ecr.aws/docker/library/redis:7.4.1
        imagePullPolicy: IfNotPresent
      tika:
        image: ghcr.io/paperless-ngx/tika:2.9.1-full
        imagePullPolicy: IfNotPresent
