---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: ocis
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  driftDetection:
    mode: enabled
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: docker.io/owncloud/ocis
              tag: 4.0.6
            command: [/bin/sh]
            args: ["-c", "ocis init || true; ocis server"]
            env:
              OCIS_URL: https://files.${S_HOMEPROD_DOMAIN}
              DEMO_USERS: false
              PROXY_TLS: false
              PROXY_HTTP_ADDR: 0.0.0.0:9200
              OCIS_LOG_LEVEL: info
              OCIS_LOG_COLOR: true
              OCIS_LOG_PRETTY: true
              STORAGE_USERS_OCIS_ROOT: /data
              # Authentik OIDC
              OCIS_OIDC_ISSUER: https://sso.${S_HOMEPROD_DOMAIN}/application/o/owncloud/
              WEB_OIDC_CLIENT_ID: fiehYo5V5NOhkwhiRApM4fgdMHNSV3kJx0a2T3kZ
              PROXY_OIDC_REWRITE_WELLKNOWN: true
              PROXY_AUTOPROVISION_ACCOUNTS: true
              # Auto role assignment
              # docs: https://doc.owncloud.com/ocis/next/deployment/services/s-list/proxy.html#automatic-role-assignments
              PROXY_USER_OIDC_CLAIM: "preferred_username"
              PROXY_ROLE_ASSIGNMENT_DRIVER: oidc
              PROXY_ROLE_ASSIGNMENT_OIDC_CLAIM: groups
              WEB_OIDC_SCOPE: "openid profile email groups"
        pod:
          securityContext:
            runAsUser: ${CONTAINER_UID}
            runAsGroup: ${CONTAINER_GID}
            runAsNonRoot: true
    service:
      main:
        ports:
          http:
            port: 9200
    ingress:
      main:
        enabled: true
        hosts:
          - host: &host files.${S_HOMEPROD_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
        className: nginx
    persistence:
      storage-users:
        enabled: true
        type: persistentVolumeClaim
        storageClassName: nfs-client
        accessMode: ReadWriteOnce
        size: 40Gi
        advancedMounts:
          main:
            main:
              - path: /data
                subPath: storage-users
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClassName: nfs-client
        accessMode: ReadWriteOnce
        size: 1Gi
        advancedMounts:
          main:
            main:
              - path: /etc/ocis
                subPath: config
      data:
        enabled: true
        type: persistentVolumeClaim
        storageClassName: nfs-client
        accessMode: ReadWriteOnce
        size: 10Gi
        advancedMounts:
          main:
            main:
              - path: /var/lib/ocis
                subPath: data
